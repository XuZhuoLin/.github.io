(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{421:function(e,r,a){"use strict";a.r(r);var n=a(2),t=Object(n.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"hadoop考试复习。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hadoop考试复习。"}},[e._v("#")]),e._v(" Hadoop考试复习。")]),e._v(" "),r("h2",{attrs:{id:"一、"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、"}},[e._v("#")]),e._v(" 一、 "),r("br")]),e._v(" "),r("p",[e._v("(1)大数据的特点4V:"),r("br"),e._v("\n数据量大，数据速率大，数据多样性大，数据价值密度低。"),r("br")]),e._v(" "),r("p",[e._v("(2)谷歌大数据的三驾马车"),r("br"),e._v("\nGFS：分布式文件系统"),r("br"),e._v("\nMapReduce：分布式计算框架"),r("br"),e._v("\nBigTable：分布式数据库"),r("br")]),e._v(" "),r("p",[e._v("(3)Hadoop生态圈"),r("br"),e._v("\nHDFS:是整个生态圈的基石，分布式文件系统，大数据文件存储的基础设施。 "),r("br"),e._v("\nYarn：分布式计算资源调度框架，为分布式计算MapReduce，spark提供分布式资源调度服务 "),r("br"),e._v("\nMapReduce：分布式计算编程框架，为编写和运行MapReduce程序提供API "),r("br"),e._v("\nHabse：分布式列族数据库 "),r("br"),e._v("\nHive：基于Hadoop的数据仓库工具，讲结构化数据文件映射成二维表进行管理 "),r("br"),e._v("\nZookeeper：分布式数据管理和协调框架，保证分布式环境中的数据的一致性。 "),r("br")]),e._v(" "),r("h2",{attrs:{id:"二、-hadoop安装部署"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、-hadoop安装部署"}},[e._v("#")]),e._v(" 二、 Hadoop安装部署")]),e._v(" "),r("p",[e._v("单机版、分布式（伪分布式，完全分布式）"),r("br"),e._v("\n1、安装JDK，配置JAVA_HOME,path的环境。"),r("br"),e._v("\n2、安装oepnssh-server，并且配置免密登录。"),r("br"),e._v("\n3、安装Hadoop，配置Hadoop_home,path环境"),r("br"),e._v("\n4、配置Hadoop的环境变量，hadoop-env.sh,core-site.xml,hdfs-site.xml,mapred-site.xml,yarn-site.xml等"),r("br"),e._v("\n5、初始化Namenode，HDFS namenode -format"),r("br")]),e._v(" "),r("p",[e._v("start-all.sh"),r("br"),e._v("\nstart-dfs.sh"),r("br"),e._v("\nstart-yarn.sh"),r("br"),e._v("\nstop-all.sh"),r("br"),e._v("\nstop-dfs.sh"),r("br"),e._v("\nstop-yarn.sh"),r("br")]),e._v(" "),r("h2",{attrs:{id:"三、-hdfs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、-hdfs"}},[e._v("#")]),e._v(" 三、.HDFS")]),e._v(" "),r("h3",{attrs:{id:"_1-namenode的webui以及端口-namenode-50070-端口为9000"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-namenode的webui以及端口-namenode-50070-端口为9000"}},[e._v("#")]),e._v(" （1）NameNode的WebUI以及端口：namenode:50070,端口为9000"),r("br")]),e._v(" "),r("p",[e._v("文件系统状态保存：fsimage文件系统镜像备份和edits文件系统编辑日志"),r("br"),e._v("\n高可用（HA）：主备切换，两台namenode，当主节点挂掉时，切换到备用节点继续工作，主节点和备用节点管理相同的文件系统，同时只有主节点提供服务"),r("br"),e._v("\n联邦（Federation）：每个namenode独立提供不同的文件系统服务，公用Datanode集群，联邦中的某一个namenode挂掉，不影响其他的namenode"),r("br")]),e._v(" "),r("h3",{attrs:{id:"_2-secendarynamenode的webui-secendarynamenode-50090"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-secendarynamenode的webui-secendarynamenode-50090"}},[e._v("#")]),e._v(" （2）secendaryNameNode的webui：secendaryNamenode：50090"),r("br")]),e._v(" "),r("p",[e._v("功能：管理检查点check point，把edits中的最新信息同步到fsimage文件中，加速缩短namenode 的启动时间"),r("br"),e._v("\n通常namenode和secendarynamenode不会部署到同一个服务器"),r("br"),e._v("\nfsimage和edits文件的合并过程："),r("br"),e._v("\n1、生成新的edits.new文件，用于记录合并过程中产生的记录"),r("br"),e._v("\n2、当触发某一时机时，（时间间隔达到1小时或者edits记录的事务达到一百万条）会从namenode下载edits和fsimage到secendarynamenode，"),r("br"),e._v("\n3、将两者合并，成为fsimage.ckpt"),r("br"),e._v("\n4、将fsimage.ckpt上传到namenode"),r("br"),e._v("\n5、替换掉原来的fsimage"),r("br"),e._v("\n6、替换掉原来的edits文件"),r("br")]),e._v(" "),r("h3",{attrs:{id:"_3-datanode功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-datanode功能"}},[e._v("#")]),e._v(" （3）DataNode功能："),r("br")]),e._v(" "),r("p",[e._v("1、存储数据块，默认块大小128M"),r("br"),e._v("\n2、负责客户端对数据库的io请求"),r("br"),e._v("\n分块存储的好处："),r("br"),e._v("\n1、支持大规模文件存储，不受单点存储的上线限制"),r("br"),e._v("\n2、利于备份"),r("br"),e._v("\n3、提高吞吐量"),r("br"),e._v("\n4、负载均衡"),r("br"),e._v("\n一个数据块会在多个Datanode进行备份，HDFS默认存储3份"),r("br")]),e._v(" "),r("h3",{attrs:{id:"_4-hdfs-shell"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-hdfs-shell"}},[e._v("#")]),e._v(" （4）HDFS shell："),r("br")]),e._v(" "),r("p",[e._v("创建目录：hdfs dfs -mkdir -p"),r("br"),e._v("\n创建空文件：hdfs dfs -touchz"),r("br"),e._v("\n查看文件列表：hdfs dfs -ls"),r("br"),e._v("\n查看文件内容：hdfs dfs -cat"),r("br"),e._v("\n复制文件：hdfs dfs -cp"),r("br"),e._v("\n移动文件：hdfs dfs -mv"),r("br"),e._v("\n删除文件：hdfs dfs -rm"),r("br"),e._v("\n删除目录：hdfs dfs -rm -r"),r("br"),e._v("\n上传文件：hdfs dfs -put"),r("br"),e._v("\n下载文件：hdfs dfs -get"),r("br"),e._v("\n合并下载：hdfs dfs -getmerge"),r("br")]),e._v(" "),r("h2",{attrs:{id:"四、yarn和mapreduce"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四、yarn和mapreduce"}},[e._v("#")]),e._v(" 四、YARN和MapReduce"),r("br")]),e._v(" "),r("p",[e._v("yarn是什么：是一个通用的，分布式计算资源调度框架"),r("br"),e._v("\nyarn的组成部门："),r("br"),e._v("\nResourceManager：资源管理器负责管理集群资源的分配申请"),r("br"),e._v("\nNodeManager：节点管理器，负责一个计算节点的容器管理"),r("br"),e._v("\nAppliactionMaster：运行mrappmaster主应用，负责一个mapreduce jop的管理，maptask和reducetask向其报告执行状态"),r("br"),e._v("\nApplication：执行具体的task"),r("br"),e._v("\nMapReduch是什么：是一个分布式编程框架，具有易于编程，良好的扩展性，高容错性的特点，适合大规模数据的离线处理"),r("br"),e._v("\nMapReduce的大致工作流程："),r("br"),e._v("\n1、对输入的文件进行切片划分"),r("br"),e._v("\n2、启动相应数量的maptask进程"),r("br"),e._v("\n3、调用inputFormat中的reduceReader，处理源数据，将数据封装为<k1,v1>键值对"),r("br"),e._v("\n4、将封装好的<k1,v1>键值对传给mapper"),r("br"),e._v("\n5、mapper调用自定义的map函数对数据进行计算"),r("br"),e._v("\n6、计算完成后，将结果封装为<k2,v2>，并输出"),r("br"),e._v("\n7、框架收集mapper的输出，进行分区和排序shuffle"),r("br"),e._v("\n8、reduce启动，并从mapper端拉取数据，reduce获取到输入数据<k3,v3>"),r("br"),e._v("\n9、reduce task调用自定义的reduce函数进行计算，得到输出<k4,v4>"),r("br"),e._v("\n10、调用outputformat的Recordwriter将结果输出"),r("br")]),e._v(" "),r("h2",{attrs:{id:"五、hbase是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五、hbase是什么"}},[e._v("#")]),e._v(" 五、Hbase是什么：")]),e._v(" "),r("p",[e._v("是一个开源的，分布式的，版本化的非关系型数据库"),r("br")]),e._v(" "),r("h2",{attrs:{id:"六、hive"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六、hive"}},[e._v("#")]),e._v(" 六、Hive"),r("br")]),e._v(" "),r("p",[e._v("数据类型："),r("br"),e._v("\n整型：tinyint，smallint，int，bigint"),r("br"),e._v("\n浮点型：float，double"),r("br"),e._v("\n字符串：string"),r("br"),e._v("\n布尔型：bool"),r("br"),e._v("\n键值对：map"),r("br"),e._v("\n数组：array"),r("br"),e._v("\n结构体：struct"),r("br"),e._v("\nHive数据结构模型有哪些：数据表、视图、分区、分桶。"),r("br"),e._v("\nHiveQL："),r("br"),e._v("\n建表：create table 001 （name string，age int，number string）"),r("br"),e._v("\npartitioned by （分区列名 列数据类型）    分区表"),r("br"),e._v("\nclustered by （分桶列名） into （分桶数量） buckets    分桶表"),r("br"),e._v("\nrow format delimited fields terminated by ‘，’ 指定每行文件格式"),r("br"),e._v("\nlocation hdfs_path 指定表文件存储路径"),r("br"),e._v("\n插入数据表：insert into table 。。。 values。。。"),r("br"),e._v("\n查询：insert into table1 select from table2"),r("br"),e._v("\n文件导入数据表：load data inpath 。。。 into table 。。。"),r("br")]),e._v(" "),r("h2",{attrs:{id:"七、zookeeper是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七、zookeeper是什么"}},[e._v("#")]),e._v(" 七、Zookeeper是什么：")]),e._v(" "),r("p",[e._v("是一个高可用的分布式数据管理和协调框架，能够很好的保证分布式环境中数据的一致性"),r("br"),e._v("\nZookeeper的数据模型："),r("br"),e._v("\nzookeeper server端存在一个leader节点，其他节点都是follower"),r("br"),e._v("\n对外的服务端口默认为2181"),r("br"),e._v("\nleader主要负责进行投票的发起和决议，更新系统状态"),r("br"),e._v("\nfollower负责接受客户端请求并向客户端返回结果，在选举过程中参与投票"),r("br"),e._v("\nzookeeper维护着一个树形层次结构，树中节点称为Znode"),r("br"),e._v("\n每个znode上都会保存自己的数据内容，同时会保存一系列属性信息，且数据不超过1MB。"),r("br")])])}),[],!1,null,null,null);r.default=t.exports}}]);